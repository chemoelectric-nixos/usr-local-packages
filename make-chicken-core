#!/bin/zsh

if [[ $# -ne 4 ]]; then
    echo "Usage: $0 REVISION TARGETED_HOST ARCH TUNE"
    exit 3
fi

# Make CHICKEN Scheme from the Git sources.
name=chicken-core

_revision="${1}"
_targeted_host="${2}"
_arch="${3}"
_tune="${4}"

tar=( tar --posix )
git=( git )
bail_out=( exit 1 )

abs_src_tarball_dir=`realpath "${PWD}/src_tarballs"`
abs_bin_tarball_dir=`realpath "${PWD}/bin_tarballs"`
abs_srcdirs_dir=`realpath "${PWD}/srcdirs"`

abs_repo_dir="${abs_src_tarball_dir}/${name}.git"

function check_out_revision
{
    local revision="${1}"
    echo "Checking out revision ${revision}"
    (cd "${abs_repo_dir}" &&
         ${git} fetch &&
         ${git} checkout -q "${revision}") || ${bail_out}
}

check_out_revision "${_revision}"

packname="${name}-${_revision}"
bin_tarball="${abs_bin_tarball_dir}/${packname}-binary-for-${_targeted_host}.tar.xz"
abs_srcdir="${abs_repo_dir}"
abs_builddir="${abs_srcdirs_dir}/${packname}/«build»"
abs_destdir="${abs_srcdirs_dir}/${packname}/«dest»"

rm -R -f "${abs_srcdirs_dir}/${packname}" || ${bail_out}
install -d "${abs_builddir}" || ${bail_out}
(
    cd "${abs_builddir}" || ${bail_out}

    # Out-of-source builds are not actually supported yet, as of
    # 2025-10-04. So copy the sources.
    cp --archive --link --update=none "${abs_srcdir}"/* "${abs_builddir}" \
        || ${bail_out}

    env CFLAGS="-O2 -march=""${_arch}"" -mtune=""${_tune}" ./configure \
        --chicken=/usr/local/libexec/chicken-core/chicken-boot \
        --prefix=/usr/local \
        --platform=linux

    make || ${bail_out}
    make check || ${bail_out}
    make install DESTDIR="${abs_destdir}" || ${bail_out}
) || ${bail_out}
mkdir -p "${abs_bin_tarball_dir}" || ${bail_out}
${tar} -cvaf "${bin_tarball}" -C "${abs_destdir}" usr || ${bail_out}

