#!/bin/zsh

if [[ $# -ne 4 ]]; then
    echo "Usage: $0 PACKAGE_VERSION TARGETED_HOST ARCH TUNE"
    exit 2
fi

name=zstd

abs_src_tarball_dir=`realpath "${PWD}/src_tarballs"`
abs_bin_tarball_dir=`realpath "${PWD}/bin_tarballs"`
abs_srcdirs_dir=`realpath "${PWD}/srcdirs"`

targeted_host="${2}"
check=no
tar=( tar )
version="${1}"
packname="${name}-${version}"
bin_tarball="${abs_bin_tarball_dir}/${packname}-binary-for-${targeted_host}.tar.xz"
abs_srcdir="${abs_srcdirs_dir}/${packname}"
abs_destdir="${abs_srcdir}/«dest»"
bail_out=( exit 1 )

src_tarball="${abs_src_tarball_dir}/${packname}.tar.zst"

make_arguments=( V=1 CPPFLAGS="-fPIC -march=${3} -mtune=${4}" )

mkdir -p "${abs_srcdirs_dir}"
rm -R -f "${abs_srcdirs_dir}/${packname}" || ${bail_out}
${tar} -f "${src_tarball}" -C "${abs_srcdirs_dir}" -x || ${bail_out}
(
    cd "${abs_srcdir}" || ${bail_out}
    make ${(@)make_arguments} || ${bail_out}
    if [[ "${check}" != "no" ]] && [[ "${check}" != "false" ]]; then
       make check ${(@)make_arguments} || ${bail_out}
    fi
    make install ${(@)make_arguments} DESTDIR="${abs_destdir}" || ${bail_out}

    #
    # Try to ensure ELF files have /usr/local/lib in the RUNPATH.
    # Also clean out any /tmp entries.
    #
    for f in `find ${abs_destdir}/usr/local -xtype f`; do
        if [[ -x "${f}" ]]; then
            patchelf --add-rpath /usr/local/lib "${f}" 2> /dev/null
            patchelf --shrink-rpath \
                     --allowed-rpath-prefixes /usr/local:/nix/store \
                     "${f}" 2> /dev/null
            true
        fi
    done

) || ${bail_out}

mkdir -p "${abs_bin_tarball_dir}" || ${bail_out}
${tar} --format=posix -cvaf "${bin_tarball}" -C "${abs_destdir}" usr \
       || ${bail_out}
exit 0
