#!/bin/zsh

if [[ $# -ne 3 ]] && [[ $# -ne 4 ]]; then
    echo "Usage: $0 PACKAGE_VERSION TARGETED_HOST LANGUAGES [FIXED_POINT=no]"
    exit 2
fi

name=gcc

if [[ `echo "${1}" | sed 's/\..*//'` -le 11 ]]; then
    echo "This script is for gcc >= 12"
    exit 3
fi

_languages="${3}"
if [[ "${_languages}" = "without-rust" ]]; then
    case "${1}" in
        15.* )
            _languages='c,ada,cobol,c++,d,fortran,go,lto,m2,objc,obj-c++'
            ;;
        *)
            echo "I do not know how to handle ‘without-rust’ for this compiler."
            ;;
    esac
fi

ban_check=yes

fixed_point=no
if [[ $# -eq 4 ]]; then
    fixed_point="${4}"
fi

# Use static libraries as much as possible, because the toolchain gets
# tricky otherwise. We will build our static libraries with
# position-independent code.
static_libraries=`mktemp -d`
ln -s /usr/local/include ${static_libraries}
install -d ${static_libraries}/lib
the_libraries=( gmp mpfr mpc isl zstd z gc )
for i in ${the_libraries}; do
    echo "GROUP ( `echo "${the_libraries}" | sed -E 's|([^[:space:]]+)|/usr/local/lib/lib\1.a |g'`)" \
         > ${static_libraries}/lib/lib${i}.so
done

# Rust, for instance, might expect cc.
extra_bin=`mktemp -d`
cat > "${extra_bin}"/cc <<EOF
#!/bin/zsh
exec gcc "\${@}"
EOF
chmod +x "${extra_bin}"/cc

export LIBRARY_PATH=${static_libraries}/lib:/usr/local/lib
export PATH="${extra_bin}:${PATH}"

function patch_function
{
    sed -i 's|BUILD_LIBS = \$(BUILD_LIBIBERTY)|BUILD_LIBS = $(BUILD_LIBIBERTY) -liconv|' \
        gcc/Makefile.in
    sed -i \
        -e 's|m64=\.\./lib64\$|m64=$|' \
        -e 's|m32=\$|m32=../i686-linux-gnu|' \
        gcc/config/i386/t-linux64
}

environment_variables=( )
configure_arguments=(
    -C

    --prefix=/usr/local
    --libdir=/usr/local/lib
    --with-native-system-header-dir=/usr/local/include

    --enable-languages="${_languages}"
    --enable-default-pie
    --disable-canonical-system-headers
    --disable-multilib
    --disable-nls
    --enable-year2038
    --enable-bootstrap
    --disable-pgo-build
    --enable-lto
    --disable-host-shared
    --enable-objc-gc
    --disable-werror
    --enable-gcov
    --enable-threads
    --enable-decimal-float
    --enable-new-dtags
    --enable-fixed-point="${fixed_point}"
    --with-{gmp,mpfr,mpc,isl,zstd,target-bdw-gc}=${static_libraries}
    --with-libiconv-prefix=/usr/local
    --with-libiconv-type=static
    --without-{target-,}system-zlib
)

source shared/basic.zsh

#
# Remove temporary directories from .la files.
#
find "${abs_destdir}" -name '*.la' |
    xargs sed -i -E "s:-L${static_libraries}::g" \
        || ${bail_out} 

#
# Make cc a synonym for gcc.
#
(cd "${abs_destdir}"/usr/local/bin && ln -s gcc cc || ${bail_out}) \
    || ${bail_out}

#
# Remake the tarball.
#
rm "${bin_tarball}" || ${bail_out}
${tar} -cvaf "${bin_tarball}" -C "${abs_destdir}" usr || ${bail_out}

rm -R -f ${static_libraries} ${extra_bin}
