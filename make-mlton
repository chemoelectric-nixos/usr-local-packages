#!/bin/zsh

#
# FIXME: Rewrite this to use the GitHub repo directly, instead of the
#        GitHub-made release tarball. (We are avoiding the uploaded
#        release tarball, because it has no signature nor any reliable
#        hash.)
#

source shared/make_package.zsh

if [[ $# -ne 1 ]]; then
    echo "Usage: $0 PACKAGE_VERSION"
    exit 2
fi

name=mlton

_package_version="${package_version:-${1}}"
_targeted_host=x86_64-unknown-linux-gnu

_VERSION=`echo "${_package_version}" |
               sed -E 's|on-(.*)-release|\1·for·chemoelectric-nixos|' \
               || ${bail_out}` \
               || ${bail_out}

bail_out=( exit 1 )

abs_src_tarball_dir=`realpath "${PWD}/src_tarballs"`
abs_bin_tarball_dir=`realpath "${PWD}/bin_tarballs"`
abs_srcdirs_dir=`realpath "${PWD}/srcdirs"`

packname="${name}-${_package_version}"
if [[ -e "${abs_src_tarball_dir}/${packname}.tar.xz" ]]; then
    src_tarball="${abs_src_tarball_dir}/${packname}.tar.xz"
elif [[ -e "${abs_src_tarball_dir}/${packname}.tar.gz" ]]; then
    src_tarball="${abs_src_tarball_dir}/${packname}.tar.gz"
elif [[ -e "${abs_src_tarball_dir}/${packname}.tar.bz2" ]]; then
    src_tarball="${abs_src_tarball_dir}/${packname}.tar.bz2"
elif [[ -e "${abs_src_tarball_dir}/${packname}.tar.zst" ]]; then
    src_tarball="${abs_src_tarball_dir}/${packname}.tar.zst"
elif [[ -e "${abs_src_tarball_dir}/${packname}.tgz" ]]; then
    src_tarball="${abs_src_tarball_dir}/${packname}.tgz"
else
    echo "What is the source tarball?"
    exit 4
fi
bin_tarball="${abs_bin_tarball_dir}/${packname}-binary-for-${_targeted_host}.tar.zst"
abs_srcdir="${abs_srcdirs_dir}/${packname}"
abs_builddir="${abs_srcdir}"
abs_destdir="${abs_srcdir}/«dest»"

mkdir -p "${abs_srcdirs_dir}"
rm -R -f "${abs_srcdirs_dir}/${packname}" || ${bail_out}
tar -f "${src_tarball}" -C "${abs_srcdirs_dir}" -x || ${bail_out}

sed -i -E 's|^MLTON_VERSION := .*$|MLTON_VERSION := '"${_VERSION}"'|' \
    "${abs_srcdir}"/Makefile.config || ${bail_out}

mkdir -p "${abs_builddir}" || ${bail_out}

(
    cd "${abs_builddir}" || ${bail_out}

    make all CC=gcc WITH_GMP_DIR=/usr/local \
         OLD_MLTON_COMPILE_ARGS="-default-ann 'allowExtendedTextConsts true'" \
         MLTON_COMPILE_ARGS="-default-ann 'allowExtendedTextConsts true'" \
        || ${bail_out}
    make docs || ${bail_out}
    (cd doc/guide/src && asciidoctor *.adoc || ${bail_out}) || ${bail_out}
    (cd doc/mlb-formal && make || ${bail_out}) || ${bail_out}

    make install PREFIX="${abs_destdir}"/usr/local || ${bail_out}

    abs_docdir="${abs_destdir}"/usr/local/share/doc/"${name}"
    mkdir -p "${abs_docdir}"/guide || ${bail_out}
    cp --dereference *.adoc "${abs_docdir}" || ${bail_out}
    cp doc/mlb-formal/mlb-formal.pdf "${abs_docdir}" || ${bail_out}
    cp -R --dereference doc/license "${abs_docdir}" || ${bail_out}
    cp -R doc/examples "${abs_docdir}" || ${bail_out}
    cp -R doc/guide/src "${abs_docdir}"/guide/adoc || ${bail_out}
    rm "${abs_docdir}"/guide/adoc/*.html || ${bail_out}
    cp -R doc/guide/src "${abs_docdir}"/guide/html || ${bail_out}
    rm "${abs_docdir}"/guide/adoc/*.adoc || ${bail_out}

) || ${bail_out}

make_package "${bin_tarball}" "${abs_destdir}" || ${bail_out}
