#!/bin/zsh

source shared/adjust_runpaths.zsh
source shared/make_package.zsh

if [[ $# -ne 5 ]]; then
    echo "Usage: $0 REVISION TARGETED_HOST CHECK ARCH TUNE"
    exit 3
fi

# Make Gauche Scheme from the Git sources.
name=Gauche

_revision="${1}"
_targeted_host="${2}"
_check="${3}"
_arch="${4}"
_tune="${5}"

git=( git )
bail_out=( exit 1 )

abs_src_tarball_dir=`realpath "${PWD}/src_tarballs"`
abs_bin_tarball_dir=`realpath "${PWD}/bin_tarballs"`
abs_srcdirs_dir=`realpath "${PWD}/srcdirs"`

abs_repo_dir="${abs_src_tarball_dir}/${name}.git"

function check_out_revision
{
    local revision="${1}"
    echo "Checking out revision ${revision}"
    (cd "${abs_repo_dir}" &&
         ${git} fetch &&
         ${git} checkout -q "${revision}") || ${bail_out}
}

check_out_revision "${_revision}"

packname="${name}-${_revision}"
bin_tarball="${abs_bin_tarball_dir}/${packname}-binary-for-${_targeted_host}.tar.zst"
abs_srcdir="${abs_repo_dir}"
abs_builddir="${abs_srcdirs_dir}/${packname}/«build»"
abs_destdir="${abs_srcdirs_dir}/${packname}/«dest»"

rm -R -f "${abs_srcdirs_dir}/${packname}" || ${bail_out}
install -d "${abs_builddir}" || ${bail_out}
(

    cd "${abs_builddir}" || ${bail_out}

    # Copy the sources.
    cp --archive --link --update=none "${abs_srcdir}"/* "${abs_builddir}" \
        || ${bail_out}

    # Autotoolize.
    ./DIST gen || ${bail_out}

    env CFLAGS="-pipe -fPIC -O2 -march=""${_arch}"" -mtune=""${_tune}" \
        ./configure \
        --with-ca-bundle=/etc/ssl/certs/ca-bundle.crt \
        --enable-shared-commands \
        --enable-heuristic-optimization \
        --enable-year2038 || ${bail_out}

    make -j"${jobs}" || ${bail_out}
    if [[ "${_check}" != "no" ]] && [[ "${_check}" != "false" ]]; then
        make check || ${bail_out}
    fi
    make install DESTDIR="${abs_destdir}" || ${bail_out}

    adjust_runpaths ${abs_destdir}/usr/local    

) || ${bail_out}

make_package "${bin_tarball}" "${abs_destdir}" || ${bail_out}
