#!/bin/zsh

source shared/make_package.zsh

if [[ $# -ne 1 ]]; then
    echo "Usage: $0 PACKAGE_VERSION"
    exit 2
fi

name=gnatcoll-bindings

the_supported_projects=(
    gmp
    iconv
    lzma
    omp
    python
    readline
    syslog
)

_package_version="${1}"
_targeted_host=x86_64-unknown-linux-gnu

jobs="${jobs:-24}"

bail_out=( exit 1 )
gprbuild=( gprbuild -v )
gprinstall=( gprinstall -v )

abs_src_tarball_dir=`realpath "${PWD}/src_tarballs"`
abs_bin_tarball_dir=`realpath "${PWD}/bin_tarballs"`
abs_srcdirs_dir=`realpath "${PWD}/srcdirs"`

packname="${name}-${_package_version}"
src_tarball="${abs_src_tarball_dir}/${packname}.tar.gz"
bin_tarball="${abs_bin_tarball_dir}/${packname}-binary-for-${_targeted_host}.tar.zst"
abs_srcdir="${abs_srcdirs_dir}/${packname}"
abs_builddir="${abs_srcdir}"
abs_destdir="${abs_srcdir}/«dest»"

install -d "${abs_srcdirs_dir}"
rm -R -f "${abs_srcdirs_dir}/${packname}" || ${bail_out}
tar -f "${src_tarball}" -C "${abs_srcdirs_dir}" -x || ${bail_out}
mv "${abs_srcdir}"/python{,2} || ${bail_out}
mv "${abs_srcdir}"/python{3,} || ${bail_out}
install -d "${abs_builddir}" || ${bail_out}

(

    cd "${abs_builddir}" || ${bail_out}

    abs_docdir="${abs_destdir}/usr/local/share/doc/${name}"

    for f in README* COPYING* */README*; do
        install -d  "${abs_docdir}"/`dirname "${f}"` || ${bail_out}
        install "${f}" "${abs_docdir}"/`dirname "${f}"` || ${bail_out}
    done
    for f in docs-common testsuite; do
        install -d  "${abs_docdir}" || ${bail_out}
        cp -R "${f}" "${abs_docdir}" || ${bail_out}
    done
    for d in "${(@)the_supported_projects}" python2; do
        (
            cd "${d}" || ${bail_out}
            for f in docs examples test; do
                if [[ -d "${f}" ]]; then
                    install -d  "${abs_docdir}/${d}" || ${bail_out}
                    cp -R "${f}" "${abs_docdir}/${d}" || ${bail_out}
                fi
            done
        ) || ${bail_out}
    done

    _short_version=`echo "${_package_version}" | sed -E 's/^([0-9]+\.[0-9]+).*/\1/'`

    function build_and_install_project
    {
        local project="${1}"
        local library_type="${2}"
        local here=`realpath ${PWD}`
        (
            cd "${project}" &&
                ${gprbuild} -p -m -Pgnatcoll_"${project}" -j"${jobs}" \
                            -XGNATCOLL_VERSION="${_short_version}" \
                            -XGNATCOLL_OS=unix \
                            -XXMLADA_BUILD="${library_type}" \
                            -XGPR_BUILD="${library_type}" \
                            -XGNATCOLL_CORE_BUILD="${library_type}" \
                            -XLIBRARY_TYPE="${library_type}" \
                            -XBUILD=PROD \
                            -XGNATCOLL_PYTHON_CFLAGS="`python-config --includes`" \
                            -XGNATCOLL_PYTHON_LIBS="" \
                            -XGNATCOLL_ICONV_OPT="" &&
                ${gprinstall} -p -f -Pgnatcoll_"${project}" \
                              --prefix="${abs_destdir}/usr/local" \
                              --sources-subdir=include/gnatcoll_"${project}" \
                              -XGNATCOLL_VERSION="${_short_version}" \
                              -XGNATCOLL_OS=unix \
                              -XXMLADA_BUILD="${library_type}" \
                              -XGPR_BUILD="${library_type}" \
                              -XGNATCOLL_CORE_BUILD="${library_type}" \
                              -XLIBRARY_TYPE="${library_type}" \
                              --build-name="${library_type}" \
                              --build-var=LIBRARY_TYPE
        ) || ${bail_out}
    }

    for proj in "${(@)the_supported_projects}"; do
        for libtype in relocatable static static-pic; do
            build_and_install_project "${proj}" "${libtype}"
        done
    done

) || ${bail_out}

make_package "${bin_tarball}" "${abs_destdir}" || ${bail_out}
